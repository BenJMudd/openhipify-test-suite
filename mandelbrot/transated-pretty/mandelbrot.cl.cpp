///////////////// Generated by Openhipify /////////////////
#include "hip/hip_runtime.h"

#include "mandelbrot.cl.hpp"
///////////////////////////////////////////////////////////

// Computes the Mandelbrot Set to N Iterations
__global__ void solve_mandelbrot(float const *real, float const *imag,
                                 int iterations, int *result) {
  // Get Parallel Index
  unsigned int i = hipBlockDim_x * hipBlockIdx_x + hipThreadIdx_x;

  float x = real[i]; // Real Component
  float y = imag[i]; // Imaginary Component
  int n = 0;         // Tracks Color Information

  // Compute the Mandelbrot Set
  while ((x * x + y * y <= 2 * 2) && n < iterations) {
    float xtemp = x * x - y * y + real[i];
    y = 2 * x * y + imag[i];
    x = xtemp;
    n++;
  }

  // Write Results to Output Arrays
  result[i] = x * x + y * y <= 2 * 2 ? -1 : n;
}
